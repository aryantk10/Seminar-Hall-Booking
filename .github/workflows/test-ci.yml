name: Test CI Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-basic:
    runs-on: ubuntu-latest
    name: Basic Tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: List files
      run: |
        echo "Repository contents:"
        ls -la
        echo "Backend contents:"
        ls -la backend/

    - name: Check Docker files
      run: |
        echo "Checking Dockerfiles..."
        if [ -f "Dockerfile" ]; then
          echo "✅ Frontend Dockerfile found"
        else
          echo "❌ Frontend Dockerfile missing"
        fi
        
        if [ -f "backend/Dockerfile" ]; then
          echo "✅ Backend Dockerfile found"
        else
          echo "❌ Backend Dockerfile missing"
        fi

    - name: Check package.json files
      run: |
        echo "Checking package.json files..."
        if [ -f "package.json" ]; then
          echo "✅ Frontend package.json found"
          echo "Frontend dependencies:"
          cat package.json | grep -A 10 '"dependencies"' || echo "No dependencies section"
        else
          echo "❌ Frontend package.json missing"
        fi
        
        if [ -f "backend/package.json" ]; then
          echo "✅ Backend package.json found"
          echo "Backend dependencies:"
          cat backend/package.json | grep -A 10 '"dependencies"' || echo "No dependencies section"
        else
          echo "❌ Backend package.json missing"
        fi

  test-docker:
    runs-on: ubuntu-latest
    name: Docker Build Test
    needs: test-basic
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Test Frontend Docker Build
      run: |
        echo "Testing frontend Docker build..."
        docker build -t test-frontend . || echo "Frontend build failed"

    - name: Test Backend Docker Build
      run: |
        echo "Testing backend Docker build..."
        docker build -t test-backend ./backend || echo "Backend build failed"

  test-node:
    runs-on: ubuntu-latest
    name: Node.js Tests
    needs: test-basic
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Test Frontend Dependencies
      run: |
        echo "Installing frontend dependencies..."
        npm ci || echo "Frontend npm ci failed"
        
    - name: Test Backend Dependencies
      run: |
        echo "Installing backend dependencies..."
        cd backend
        npm ci || echo "Backend npm ci failed"
