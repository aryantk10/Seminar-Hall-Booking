name: Production Deployment

on:
  workflow_run:
    workflows: ["Main CI/CD Pipeline"]
    types:
      - completed
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_FRONTEND: ${{ github.repository }}-frontend
  IMAGE_NAME_BACKEND: ${{ github.repository }}-backend

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy Application
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Deploy to staging
      run: |
        echo "üöÄ Deploying to staging environment..."
        echo "Frontend Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}:latest"
        echo "Backend Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}:latest"
        
        # Here you would typically deploy to your staging/production environment
        # Examples:
        # - Deploy to AWS ECS
        # - Deploy to Kubernetes
        # - Deploy to Docker Swarm
        # - Deploy to your VPS
        
        echo "‚úÖ Deployment completed successfully!"

    - name: Run health checks
      run: |
        echo "üîç Running health checks..."
        # Add your health check commands here
        # curl -f http://your-app-url/health || exit 1
        echo "‚úÖ Health checks passed!"

    - name: Notify deployment
      run: |
        echo "üì¢ Deployment notification sent!"
        # Add notification logic here (Slack, Discord, Email, etc.)

  security-scan:
    runs-on: ubuntu-latest
    name: Security Scan
    needs: deploy
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}:latest'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'
