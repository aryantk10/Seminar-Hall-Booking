events {
    worker_connections 1024;
}

http {
    upstream frontend-staging {
        server frontend:9002;
    }

    upstream backend-staging {
        server backend:5000;
    }

    # Rate limiting for staging (more lenient than production)
    limit_req_zone $binary_remote_addr zone=staging-api:10m rate=20r/s;
    limit_req_zone $binary_remote_addr zone=staging-login:10m rate=10r/m;

    # Logging
    log_format staging_format '$remote_addr - $remote_user [$time_local] '
                             '"$request" $status $body_bytes_sent '
                             '"$http_referer" "$http_user_agent" '
                             'rt=$request_time uct="$upstream_connect_time" '
                             'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/staging_access.log staging_format;
    error_log /var/log/nginx/staging_error.log warn;

    server {
        listen 80;
        server_name staging-seminar-hall.localhost localhost;

        # Security headers (staging environment)
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' 'unsafe-inline' 'unsafe-eval' http: https: data: blob:" always;
        add_header X-Environment "staging" always;

        # Frontend routes
        location / {
            proxy_pass http://frontend-staging;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Environment "staging";
            proxy_cache_bypass $http_upgrade;
            
            # Staging-specific headers
            proxy_set_header X-Staging-Mode "true";
        }

        # API routes with rate limiting
        location /api/ {
            limit_req zone=staging-api burst=30 nodelay;
            proxy_pass http://backend-staging;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Environment "staging";
            
            # CORS headers for staging
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }
        }

        # Login endpoint with staging rate limiting
        location /api/auth/login {
            limit_req zone=staging-login burst=10 nodelay;
            proxy_pass http://backend-staging;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Environment "staging";
        }

        # Health check endpoint
        location /health {
            proxy_pass http://backend-staging/health;
            access_log off;
            add_header X-Environment "staging" always;
        }

        # Staging-specific endpoints
        location /staging/ {
            proxy_pass http://backend-staging/;
            proxy_set_header X-Staging-Debug "true";
            proxy_set_header X-Environment "staging";
        }

        # Static files caching (less aggressive for staging)
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            proxy_pass http://frontend-staging;
            expires 1h;
            add_header Cache-Control "public";
            add_header X-Environment "staging" always;
        }

        # Staging debug endpoint
        location /debug {
            return 200 '{"environment":"staging","timestamp":"$time_iso8601","server":"$hostname"}';
            add_header Content-Type application/json;
            add_header X-Environment "staging" always;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
            add_header X-Environment "staging" always;
        }
    }

    # Monitoring endpoints server
    server {
        listen 8080;
        server_name monitoring-staging.localhost;

        # Prometheus metrics
        location /metrics {
            proxy_pass http://prometheus-staging:9090;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Grafana dashboard
        location /grafana/ {
            proxy_pass http://grafana-staging:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Loki logs
        location /loki/ {
            proxy_pass http://loki-staging:3100/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
}
